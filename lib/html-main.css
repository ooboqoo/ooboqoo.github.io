/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
* {
  box-sizing: border-box;
}
html {
  overflow-x: hidden;
}
body {
  font-family: Verdana, Arial, SimSun, "Microsoft YaHei", sans-serif;
  line-height: 1.5;
}
h1 {
  font-size: 2rem;
}
h2 {
  font-size: 1.75rem;
}
h3 {
  font-size: 1.5rem;
}
h4 {
  font-size: 1.25rem;
}
h5 {
  font-size: 1rem;
}
h1,
h2,
h3,
h4,
h5 {
  margin: 0.25em 0;
}
h1 a,
h2 a,
h3 a,
h4 a,
h5 a {
  font-weight: inherit;
}
h1,
h2,
h3,
h4 {
  font-family: "Microsoft YaHei";
  font-weight: normal;
}
hr {
  height: 0;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 6px 0;
}
img {
  margin-bottom: -5px;
  max-width: 100%;
}
a {
  color: inherit;
}
table {
  width: 100%;
}
table,
th,
td {
  border: none;
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row .half {
  float: left;
  width: 100%;
}
@media (min-width: 601px) {
  .row .half {
    width: 49.99999%;
  }
}
.responsive {
  overflow-x: auto;
}
.shadow-2 {
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12) !important;
}
/* 文档主体内容定义 */
#article {
  width: 100%;
  position: relative;
  text-align: left;
  border: 0;
}
@media only screen and (min-width: 993px) {
  #article {
    max-width: 980px;
    margin: auto;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.12) !important;
  }
}
#article > div {
  margin: 0 15px;
  padding-bottom: 6px;
}
#article > div h2 {
  margin-left: 0;
  margin-right: 0;
}
#article h1,
#article h2 {
  margin-left: 15px;
  margin-right: 15px;
}
#article h1 {
  border-bottom: 2px solid #999;
  text-align: center;
}
#article h2 {
  border-bottom: 1px solid #ccc;
}
#article h2.collapse::after {
  content: "#点击展开#";
  font-size: 1rem;
  position: absolute;
  right: 20px;
}
#article p {
  margin: 0.25em 0;
}
#article p.warning span:first-child,
#article p.note span:first-child,
#article p.tip span:first-child,
#article p.prop span:first-child,
#article p.important span:first-child {
  font-weight: bold;
}
#article p.warning span:first-child,
#article p.important span:first-child {
  color: #dd0000;
}
#article p a {
  text-decoration: none;
  border-bottom: 1px solid gray;
}
#article p em {
  padding: 0 8px 0 0;
}
#article ul,
#article ol {
  margin: 2px 0 0 2em;
  padding: 0;
}
#article blockquote {
  margin: 6px 0;
  padding: 4px 4px 4px 12px;
  border-left: 4px solid green;
}
pre,
code {
  font-family: Consolas, "Courier New", Courier, monospace;
}
pre {
  margin: 3px 0;
  padding: 0.25em 0.5em;
  border: 1px dotted #999;
  white-space: pre-wrap;
}
pre code {
  color: #0000dd;
  background-color: transparent;
}
pre span {
  color: #999;
}
code {
  padding: 1px 0.25em;
  color: #C00;
  background-color: #eee;
  border-radius: 0.25em;
}
#article table {
  margin: 4px 0 0;
  border: 1px solid #999;
  empty-cells: show;
}
#article table .table_value {
  color: #0F93D2;
}
#article table .no_wrap {
  white-space: nowrap;
}
#article table tr.notsupported {
  color: #999999;
}
#article table tr.separator {
  line-height: 0.25em;
}
#article table table tr:hover {
  background-color: #f5f5f5;
}
#article table th {
  padding: 2px 10px;
  text-align: center;
  color: #fff;
  background-color: #666;
}
#article table td {
  padding: 2px 10px;
  border-top: 1px solid #ccc;
}
#article table td p {
  margin: 0 0 2px 0;
}
#article table td:first-child a {
  text-decoration: none;
  color: #f33;
}
#article table td.html5badge {
  background: url(../images/html5_badge20.png) right no-repeat;
}
#article table td em {
  color: #0000ff;
  font-weight: normal;
}
#md {
  padding: 0 14px 10px 18px;
}
#md h1,
#md h2 {
  margin-left: 0;
  margin-right: 0;
}
#md pre code {
  color: #333;
  padding: 0.25em 0.5em;
}
#md pre code.hljs {
  padding: 0;
}
#contents ul {
  margin: 0;
  text-align: center;
}
#contents ul li {
  display: inline-block;
  padding: 0 0.25em;
}
#contents.multicolumn {
  -webkit-column-width: 8em;
  -moz-column-width: 8em;
  column-width: 8em;
}
#contents.multicolumn ul {
  text-align: left;
}
#contents.multicolumn ul li {
  display: block;
  padding: 0;
  list-style: none;
  overflow-x: hidden;
  white-space: nowrap;
}
#article .dl {
  padding: 0 4px 4px 24px;
  border: 1px solid gray;
}
#article .dl::before {
  content: "方框区域内双击可折叠/展开明细";
  color: #ccc;
  position: absolute;
  right: 30px;
  z-index: -1;
}
#article .dl > h4 {
  margin: 0 0 0 -14px;
}
#article .dl > h5 {
  margin: 0 0 0 -14px;
  color: red;
  font-weight: normal;
}
#article .dl > h5 > span {
  color: #333;
}
#article .dl.collapse > :not(h5):not(h4) {
  display: none;
}
#sidemenu {
  display: none;
  width: 230px;
  height: 100%;
  position: fixed !important;
  top: 0;
  z-index: 99;
  overflow-x: hidden;
  background-color: #eee;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12) !important;
}
#sidemenu #closebtn {
  position: absolute;
  right: 4px;
  font-size: 20px;
  font-weight: bold;
  color: inherit;
  padding: 0 6px;
  border-radius: 4px;
  background-color: #888;
}
#sidemenu #closebtn:hover,
#sidemenu #closebtn:focus {
  color: #fff;
  cursor: pointer;
}
#sidemenu h2 {
  font-family: "Microsoft YaHei", sans-serif;
  font-size: 22px;
  text-align: center;
  background-color: #ccc;
  margin: 2px 6px;
}
#sidemenu h2::before {
  content: "-";
  color: #fff;
  font-weight: bold;
  position: absolute;
  left: 12px;
}
#sidemenu h2.collapse::before {
  content: "+";
}
#sidemenu h3 {
  font-family: "Microsoft YaHei", sans-serif;
  font-size: 20px;
  padding-left: 8px;
  color: #000;
  margin: 2px 0;
}
#sidemenu a {
  padding: 0 16px;
  color: #555;
  font-size: 1rem;
  text-decoration: none;
  display: block;
}
#sidemenu #sidemenu a:hover {
  background-color: #ccc;
}

#pagenav {position: fixed; top: 12px; right: 60px; margin: 0.25em; padding:0 0.25em; color: #666;
          border: 1px solid #666; border-radius: 0.25em; opacity: 0.9; z-index: 999; cursor: pointer;}
#pagenav > div {display: none; position: absolute; left: -195px; width: 300px;
    border: 1px solid #333; border-radius: 0.25em; background-color: #fff; overflow-x: hidden; }
#pagenav:hover > div {
  display: block;
}
#pagenav a {
  display: block;
  color: #333;
  text-decoration: none;
  padding: 4px 16px;
  white-space: nowrap;
}
#pagenav a:hover {
  color: #fff;
  background-color: #999;
}
/*

Visual Studio-like style based on original C# coloring by Jason Diamond <jason@diamond.name>

*/
.hljs {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  background: transparent;
  color: black;
}
.hljs-comment,
.hljs-quote,
.hljs-variable {
  color: #008000;
}
.hljs-keyword,
.hljs-selector-tag,
.hljs-built_in,
.hljs-name,
.hljs-tag {
  color: #00f;
}
.hljs-string,
.hljs-title,
.hljs-section,
.hljs-attribute,
.hljs-literal,
.hljs-template-tag,
.hljs-template-variable,
.hljs-type,
.hljs-addition {
  color: #a31515;
}
.hljs-deletion,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-meta {
  color: #2b91af;
}
.hljs-doctag {
  color: #808080;
}
.hljs-attr {
  color: #f00;
}
.hljs-symbol,
.hljs-bullet,
.hljs-link {
  color: #00b0e8;
}
.hljs-emphasis {
  font-style: italic;
}
.hljs-strong {
  font-weight: bold;
}
@media (min-width: 1210px) {
  body {
    width: 1210px;
    position: relative;
    margin: auto;
  }
  #article {
    position: relative;
    left: 115px;
  }
  #sidemenu {
    display: block;
  }
  #sidemenu #closebtn {
    display: none;
  }
  #pagenav {
    top: 20px;
    left: calc(50% - 376px);
  }
}

/*# sourceMappingURL=data:application/json;base64, */
